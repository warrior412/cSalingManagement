//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class cSalingManagement_LocalEntities : DbContext
    {
        public cSalingManagement_LocalEntities()
            : base("name=cSalingManagement_LocalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<M_Account> M_Account { get; set; }
        public DbSet<M_Category> M_Category { get; set; }
        public DbSet<M_Customer> M_Customer { get; set; }
        public DbSet<M_Employee> M_Employee { get; set; }
        public DbSet<M_Product> M_Product { get; set; }
        public DbSet<M_Supplier> M_Supplier { get; set; }
        public DbSet<T_Unit> T_Unit { get; set; }
        public DbSet<temp> temps { get; set; }
    
        public virtual int sp_MUserAccount_Delete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MUserAccount_Delete");
        }
    
        public virtual int sp_MUserAccount_Get(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MUserAccount_Get", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_MUserAccount_GetAll_Result> sp_MUserAccount_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MUserAccount_GetAll_Result>("sp_MUserAccount_GetAll");
        }
    
        public virtual int sp_MUserAccount_Insert(string username, string password, Nullable<int> status)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MUserAccount_Insert", usernameParameter, passwordParameter, statusParameter);
        }
    
        public virtual int sp_MUserAccount_Update(string username, string password, Nullable<int> status)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MUserAccount_Update", usernameParameter, passwordParameter, statusParameter);
        }
    
        public virtual int usp_DeleteMAccount(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMAccount", userIDParameter);
        }
    
        public virtual int usp_DeleteMAccountsDynamic(string whereCondition)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMAccountsDynamic", whereConditionParameter);
        }
    
        public virtual int usp_DeleteMCategoriesDynamic(string whereCondition)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMCategoriesDynamic", whereConditionParameter);
        }
    
        public virtual int usp_DeleteMCategory(string categoryID)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMCategory", categoryIDParameter);
        }
    
        public virtual int usp_DeleteMCustomer(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMCustomer", customerIDParameter);
        }
    
        public virtual int usp_DeleteMCustomersDynamic(string whereCondition)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMCustomersDynamic", whereConditionParameter);
        }
    
        public virtual int usp_DeleteMEmployee(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMEmployee", employeeIDParameter);
        }
    
        public virtual int usp_DeleteMEmployeesDynamic(string whereCondition)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMEmployeesDynamic", whereConditionParameter);
        }
    
        public virtual int usp_DeleteMProduct(string productID)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMProduct", productIDParameter);
        }
    
        public virtual int usp_DeleteMProductsDynamic(string whereCondition)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMProductsDynamic", whereConditionParameter);
        }
    
        public virtual int usp_DeleteMSupplier(string supplierID)
        {
            var supplierIDParameter = supplierID != null ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMSupplier", supplierIDParameter);
        }
    
        public virtual int usp_DeleteMSuppliersDynamic(string whereCondition)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMSuppliersDynamic", whereConditionParameter);
        }
    
        public virtual int usp_DeleteTemp(string aa)
        {
            var aaParameter = aa != null ?
                new ObjectParameter("aa", aa) :
                new ObjectParameter("aa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteTemp", aaParameter);
        }
    
        public virtual int usp_DeleteTempsDynamic(string whereCondition)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteTempsDynamic", whereConditionParameter);
        }
    
        public virtual int usp_DeleteTUnit(string unitID)
        {
            var unitIDParameter = unitID != null ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteTUnit", unitIDParameter);
        }
    
        public virtual int usp_DeleteTUnitsDynamic(string whereCondition)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteTUnitsDynamic", whereConditionParameter);
        }
    
        public virtual int usp_InsertMAccount(string userID, string password, Nullable<int> status, Nullable<int> role)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMAccount", userIDParameter, passwordParameter, statusParameter, roleParameter);
        }
    
        public virtual int usp_InsertMCategory(string categoryID, string categoryName_VI, string categoryName_EN, Nullable<int> status)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var categoryName_VIParameter = categoryName_VI != null ?
                new ObjectParameter("CategoryName_VI", categoryName_VI) :
                new ObjectParameter("CategoryName_VI", typeof(string));
    
            var categoryName_ENParameter = categoryName_EN != null ?
                new ObjectParameter("CategoryName_EN", categoryName_EN) :
                new ObjectParameter("CategoryName_EN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMCategory", categoryIDParameter, categoryName_VIParameter, categoryName_ENParameter, statusParameter);
        }
    
        public virtual int usp_InsertMCustomer(string customerID, string firstName, string middleName, string lastName, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string address, string phoneNo_1, string phoneNo_2, string customerType, string detail, Nullable<int> status, Nullable<System.DateTime> createdDate, string createdUser, Nullable<System.DateTime> updateDate, string updateUser, string userID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("CustomerType", customerType) :
                new ObjectParameter("CustomerType", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("CreatedUser", createdUser) :
                new ObjectParameter("CreatedUser", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var updateUserParameter = updateUser != null ?
                new ObjectParameter("UpdateUser", updateUser) :
                new ObjectParameter("UpdateUser", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMCustomer", customerIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, genderParameter, dateOfBirthParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, customerTypeParameter, detailParameter, statusParameter, createdDateParameter, createdUserParameter, updateDateParameter, updateUserParameter, userIDParameter);
        }
    
        public virtual int usp_InsertMEmployee(string employeeID, string firstName, string middleName, string lastName, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string address, string phoneNo_1, string phoneNo_2, byte[] picture, string status, Nullable<System.DateTime> createdDate, string createdUser, string job, string userID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(byte[]));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("CreatedUser", createdUser) :
                new ObjectParameter("CreatedUser", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMEmployee", employeeIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, genderParameter, dateOfBirthParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, pictureParameter, statusParameter, createdDateParameter, createdUserParameter, jobParameter, userIDParameter);
        }
    
        public virtual int usp_InsertMProduct(string productID, string productName_VI, string productName_EN, byte[] productImage, string originalPrice, string sellingPrice, Nullable<int> quantity, string detailInfo, Nullable<int> status, Nullable<int> rate, string category, string supplier, string unit)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var productName_VIParameter = productName_VI != null ?
                new ObjectParameter("ProductName_VI", productName_VI) :
                new ObjectParameter("ProductName_VI", typeof(string));
    
            var productName_ENParameter = productName_EN != null ?
                new ObjectParameter("ProductName_EN", productName_EN) :
                new ObjectParameter("ProductName_EN", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            var originalPriceParameter = originalPrice != null ?
                new ObjectParameter("OriginalPrice", originalPrice) :
                new ObjectParameter("OriginalPrice", typeof(string));
    
            var sellingPriceParameter = sellingPrice != null ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var detailInfoParameter = detailInfo != null ?
                new ObjectParameter("DetailInfo", detailInfo) :
                new ObjectParameter("DetailInfo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMProduct", productIDParameter, productName_VIParameter, productName_ENParameter, productImageParameter, originalPriceParameter, sellingPriceParameter, quantityParameter, detailInfoParameter, statusParameter, rateParameter, categoryParameter, supplierParameter, unitParameter);
        }
    
        public virtual int usp_InsertMSupplier(string supplierID, string supplierName, string address, string phoneNo_1, string phoneNo_2, Nullable<int> status, Nullable<int> rate)
        {
            var supplierIDParameter = supplierID != null ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMSupplier", supplierIDParameter, supplierNameParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, statusParameter, rateParameter);
        }
    
        public virtual int usp_InsertTemp(string aa, string bb)
        {
            var aaParameter = aa != null ?
                new ObjectParameter("aa", aa) :
                new ObjectParameter("aa", typeof(string));
    
            var bbParameter = bb != null ?
                new ObjectParameter("bb", bb) :
                new ObjectParameter("bb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertTemp", aaParameter, bbParameter);
        }
    
        public virtual int usp_InsertTUnit(string unitID, string unitName)
        {
            var unitIDParameter = unitID != null ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(string));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertTUnit", unitIDParameter, unitNameParameter);
        }
    
        public virtual int usp_InsertUpdateMAccount(string userID, string password, Nullable<int> status, Nullable<int> role)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateMAccount", userIDParameter, passwordParameter, statusParameter, roleParameter);
        }
    
        public virtual int usp_InsertUpdateMCategory(string categoryID, string categoryName_VI, string categoryName_EN, Nullable<int> status)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var categoryName_VIParameter = categoryName_VI != null ?
                new ObjectParameter("CategoryName_VI", categoryName_VI) :
                new ObjectParameter("CategoryName_VI", typeof(string));
    
            var categoryName_ENParameter = categoryName_EN != null ?
                new ObjectParameter("CategoryName_EN", categoryName_EN) :
                new ObjectParameter("CategoryName_EN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateMCategory", categoryIDParameter, categoryName_VIParameter, categoryName_ENParameter, statusParameter);
        }
    
        public virtual int usp_InsertUpdateMCustomer(string customerID, string firstName, string middleName, string lastName, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string address, string phoneNo_1, string phoneNo_2, string customerType, string detail, Nullable<int> status, Nullable<System.DateTime> createdDate, string createdUser, Nullable<System.DateTime> updateDate, string updateUser, string userID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("CustomerType", customerType) :
                new ObjectParameter("CustomerType", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("CreatedUser", createdUser) :
                new ObjectParameter("CreatedUser", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var updateUserParameter = updateUser != null ?
                new ObjectParameter("UpdateUser", updateUser) :
                new ObjectParameter("UpdateUser", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateMCustomer", customerIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, genderParameter, dateOfBirthParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, customerTypeParameter, detailParameter, statusParameter, createdDateParameter, createdUserParameter, updateDateParameter, updateUserParameter, userIDParameter);
        }
    
        public virtual int usp_InsertUpdateMEmployee(string employeeID, string firstName, string middleName, string lastName, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string address, string phoneNo_1, string phoneNo_2, byte[] picture, string status, Nullable<System.DateTime> createdDate, string createdUser, string job, string userID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(byte[]));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("CreatedUser", createdUser) :
                new ObjectParameter("CreatedUser", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateMEmployee", employeeIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, genderParameter, dateOfBirthParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, pictureParameter, statusParameter, createdDateParameter, createdUserParameter, jobParameter, userIDParameter);
        }
    
        public virtual int usp_InsertUpdateMProduct(string productID, string productName_VI, string productName_EN, byte[] productImage, string originalPrice, string sellingPrice, Nullable<int> quantity, string detailInfo, Nullable<int> status, Nullable<int> rate, string category, string supplier, string unit)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var productName_VIParameter = productName_VI != null ?
                new ObjectParameter("ProductName_VI", productName_VI) :
                new ObjectParameter("ProductName_VI", typeof(string));
    
            var productName_ENParameter = productName_EN != null ?
                new ObjectParameter("ProductName_EN", productName_EN) :
                new ObjectParameter("ProductName_EN", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            var originalPriceParameter = originalPrice != null ?
                new ObjectParameter("OriginalPrice", originalPrice) :
                new ObjectParameter("OriginalPrice", typeof(string));
    
            var sellingPriceParameter = sellingPrice != null ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var detailInfoParameter = detailInfo != null ?
                new ObjectParameter("DetailInfo", detailInfo) :
                new ObjectParameter("DetailInfo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateMProduct", productIDParameter, productName_VIParameter, productName_ENParameter, productImageParameter, originalPriceParameter, sellingPriceParameter, quantityParameter, detailInfoParameter, statusParameter, rateParameter, categoryParameter, supplierParameter, unitParameter);
        }
    
        public virtual int usp_InsertUpdateMSupplier(string supplierID, string supplierName, string address, string phoneNo_1, string phoneNo_2, Nullable<int> status, Nullable<int> rate)
        {
            var supplierIDParameter = supplierID != null ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateMSupplier", supplierIDParameter, supplierNameParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, statusParameter, rateParameter);
        }
    
        public virtual int usp_InsertUpdateTemp(string aa, string bb)
        {
            var aaParameter = aa != null ?
                new ObjectParameter("aa", aa) :
                new ObjectParameter("aa", typeof(string));
    
            var bbParameter = bb != null ?
                new ObjectParameter("bb", bb) :
                new ObjectParameter("bb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateTemp", aaParameter, bbParameter);
        }
    
        public virtual int usp_InsertUpdateTUnit(string unitID, string unitName)
        {
            var unitIDParameter = unitID != null ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(string));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateTUnit", unitIDParameter, unitNameParameter);
        }
    
        public virtual ObjectResult<usp_SelectMAccount_Result> usp_SelectMAccount(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMAccount_Result>("usp_SelectMAccount", userIDParameter);
        }
    
        public virtual ObjectResult<usp_SelectMAccountsAll_Result> usp_SelectMAccountsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMAccountsAll_Result>("usp_SelectMAccountsAll");
        }
    
        public virtual int usp_SelectMAccountsDynamic(string whereCondition, string orderByExpression)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            var orderByExpressionParameter = orderByExpression != null ?
                new ObjectParameter("OrderByExpression", orderByExpression) :
                new ObjectParameter("OrderByExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectMAccountsDynamic", whereConditionParameter, orderByExpressionParameter);
        }
    
        public virtual ObjectResult<usp_SelectMAccountsPaged_Result> usp_SelectMAccountsPaged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMAccountsPaged_Result>("usp_SelectMAccountsPaged");
        }
    
        public virtual ObjectResult<usp_SelectMCategoriesAll_Result> usp_SelectMCategoriesAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMCategoriesAll_Result>("usp_SelectMCategoriesAll");
        }
    
        public virtual int usp_SelectMCategoriesDynamic(string whereCondition, string orderByExpression)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            var orderByExpressionParameter = orderByExpression != null ?
                new ObjectParameter("OrderByExpression", orderByExpression) :
                new ObjectParameter("OrderByExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectMCategoriesDynamic", whereConditionParameter, orderByExpressionParameter);
        }
    
        public virtual ObjectResult<usp_SelectMCategoriesPaged_Result> usp_SelectMCategoriesPaged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMCategoriesPaged_Result>("usp_SelectMCategoriesPaged");
        }
    
        public virtual ObjectResult<usp_SelectMCategory_Result> usp_SelectMCategory(string categoryID)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMCategory_Result>("usp_SelectMCategory", categoryIDParameter);
        }
    
        public virtual ObjectResult<usp_SelectMCustomer_Result> usp_SelectMCustomer(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMCustomer_Result>("usp_SelectMCustomer", customerIDParameter);
        }
    
        public virtual ObjectResult<usp_SelectMCustomersAll_Result> usp_SelectMCustomersAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMCustomersAll_Result>("usp_SelectMCustomersAll");
        }
    
        public virtual int usp_SelectMCustomersDynamic(string whereCondition, string orderByExpression)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            var orderByExpressionParameter = orderByExpression != null ?
                new ObjectParameter("OrderByExpression", orderByExpression) :
                new ObjectParameter("OrderByExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectMCustomersDynamic", whereConditionParameter, orderByExpressionParameter);
        }
    
        public virtual ObjectResult<usp_SelectMCustomersPaged_Result> usp_SelectMCustomersPaged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMCustomersPaged_Result>("usp_SelectMCustomersPaged");
        }
    
        public virtual ObjectResult<usp_SelectMEmployee_Result> usp_SelectMEmployee(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMEmployee_Result>("usp_SelectMEmployee", employeeIDParameter);
        }
    
        public virtual ObjectResult<usp_SelectMEmployeesAll_Result> usp_SelectMEmployeesAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMEmployeesAll_Result>("usp_SelectMEmployeesAll");
        }
    
        public virtual int usp_SelectMEmployeesDynamic(string whereCondition, string orderByExpression)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            var orderByExpressionParameter = orderByExpression != null ?
                new ObjectParameter("OrderByExpression", orderByExpression) :
                new ObjectParameter("OrderByExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectMEmployeesDynamic", whereConditionParameter, orderByExpressionParameter);
        }
    
        public virtual ObjectResult<usp_SelectMEmployeesPaged_Result> usp_SelectMEmployeesPaged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMEmployeesPaged_Result>("usp_SelectMEmployeesPaged");
        }
    
        public virtual ObjectResult<usp_SelectMProduct_Result> usp_SelectMProduct(string productID)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMProduct_Result>("usp_SelectMProduct", productIDParameter);
        }
    
        public virtual ObjectResult<usp_SelectMProductsAll_Result> usp_SelectMProductsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMProductsAll_Result>("usp_SelectMProductsAll");
        }
    
        public virtual int usp_SelectMProductsDynamic(string whereCondition, string orderByExpression)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            var orderByExpressionParameter = orderByExpression != null ?
                new ObjectParameter("OrderByExpression", orderByExpression) :
                new ObjectParameter("OrderByExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectMProductsDynamic", whereConditionParameter, orderByExpressionParameter);
        }
    
        public virtual ObjectResult<usp_SelectMProductsPaged_Result> usp_SelectMProductsPaged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMProductsPaged_Result>("usp_SelectMProductsPaged");
        }
    
        public virtual ObjectResult<usp_SelectMSupplier_Result> usp_SelectMSupplier(string supplierID)
        {
            var supplierIDParameter = supplierID != null ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMSupplier_Result>("usp_SelectMSupplier", supplierIDParameter);
        }
    
        public virtual ObjectResult<usp_SelectMSuppliersAll_Result> usp_SelectMSuppliersAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMSuppliersAll_Result>("usp_SelectMSuppliersAll");
        }
    
        public virtual int usp_SelectMSuppliersDynamic(string whereCondition, string orderByExpression)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            var orderByExpressionParameter = orderByExpression != null ?
                new ObjectParameter("OrderByExpression", orderByExpression) :
                new ObjectParameter("OrderByExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectMSuppliersDynamic", whereConditionParameter, orderByExpressionParameter);
        }
    
        public virtual ObjectResult<usp_SelectMSuppliersPaged_Result> usp_SelectMSuppliersPaged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectMSuppliersPaged_Result>("usp_SelectMSuppliersPaged");
        }
    
        public virtual ObjectResult<usp_SelectTemp_Result> usp_SelectTemp(string aa)
        {
            var aaParameter = aa != null ?
                new ObjectParameter("aa", aa) :
                new ObjectParameter("aa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectTemp_Result>("usp_SelectTemp", aaParameter);
        }
    
        public virtual ObjectResult<usp_SelectTempsAll_Result> usp_SelectTempsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectTempsAll_Result>("usp_SelectTempsAll");
        }
    
        public virtual int usp_SelectTempsDynamic(string whereCondition, string orderByExpression)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            var orderByExpressionParameter = orderByExpression != null ?
                new ObjectParameter("OrderByExpression", orderByExpression) :
                new ObjectParameter("OrderByExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectTempsDynamic", whereConditionParameter, orderByExpressionParameter);
        }
    
        public virtual ObjectResult<usp_SelectTempsPaged_Result> usp_SelectTempsPaged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectTempsPaged_Result>("usp_SelectTempsPaged");
        }
    
        public virtual ObjectResult<usp_SelectTUnit_Result> usp_SelectTUnit(string unitID)
        {
            var unitIDParameter = unitID != null ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectTUnit_Result>("usp_SelectTUnit", unitIDParameter);
        }
    
        public virtual ObjectResult<usp_SelectTUnitsAll_Result> usp_SelectTUnitsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectTUnitsAll_Result>("usp_SelectTUnitsAll");
        }
    
        public virtual int usp_SelectTUnitsDynamic(string whereCondition, string orderByExpression)
        {
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("WhereCondition", whereCondition) :
                new ObjectParameter("WhereCondition", typeof(string));
    
            var orderByExpressionParameter = orderByExpression != null ?
                new ObjectParameter("OrderByExpression", orderByExpression) :
                new ObjectParameter("OrderByExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectTUnitsDynamic", whereConditionParameter, orderByExpressionParameter);
        }
    
        public virtual ObjectResult<usp_SelectTUnitsPaged_Result> usp_SelectTUnitsPaged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectTUnitsPaged_Result>("usp_SelectTUnitsPaged");
        }
    
        public virtual int usp_UpdateMAccount(string userID, string password, Nullable<int> status, Nullable<int> role)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMAccount", userIDParameter, passwordParameter, statusParameter, roleParameter);
        }
    
        public virtual int usp_UpdateMCategory(string categoryID, string categoryName_VI, string categoryName_EN, Nullable<int> status)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var categoryName_VIParameter = categoryName_VI != null ?
                new ObjectParameter("CategoryName_VI", categoryName_VI) :
                new ObjectParameter("CategoryName_VI", typeof(string));
    
            var categoryName_ENParameter = categoryName_EN != null ?
                new ObjectParameter("CategoryName_EN", categoryName_EN) :
                new ObjectParameter("CategoryName_EN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMCategory", categoryIDParameter, categoryName_VIParameter, categoryName_ENParameter, statusParameter);
        }
    
        public virtual int usp_UpdateMCustomer(string customerID, string firstName, string middleName, string lastName, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string address, string phoneNo_1, string phoneNo_2, string customerType, string detail, Nullable<int> status, Nullable<System.DateTime> createdDate, string createdUser, Nullable<System.DateTime> updateDate, string updateUser, string userID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("CustomerType", customerType) :
                new ObjectParameter("CustomerType", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("CreatedUser", createdUser) :
                new ObjectParameter("CreatedUser", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var updateUserParameter = updateUser != null ?
                new ObjectParameter("UpdateUser", updateUser) :
                new ObjectParameter("UpdateUser", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMCustomer", customerIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, genderParameter, dateOfBirthParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, customerTypeParameter, detailParameter, statusParameter, createdDateParameter, createdUserParameter, updateDateParameter, updateUserParameter, userIDParameter);
        }
    
        public virtual int usp_UpdateMEmployee(string employeeID, string firstName, string middleName, string lastName, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string address, string phoneNo_1, string phoneNo_2, byte[] picture, string status, Nullable<System.DateTime> createdDate, string createdUser, string job, string userID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(byte[]));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("CreatedUser", createdUser) :
                new ObjectParameter("CreatedUser", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMEmployee", employeeIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, genderParameter, dateOfBirthParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, pictureParameter, statusParameter, createdDateParameter, createdUserParameter, jobParameter, userIDParameter);
        }
    
        public virtual int usp_UpdateMProduct(string productID, string productName_VI, string productName_EN, byte[] productImage, string originalPrice, string sellingPrice, Nullable<int> quantity, string detailInfo, Nullable<int> status, Nullable<int> rate, string category, string supplier, string unit)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var productName_VIParameter = productName_VI != null ?
                new ObjectParameter("ProductName_VI", productName_VI) :
                new ObjectParameter("ProductName_VI", typeof(string));
    
            var productName_ENParameter = productName_EN != null ?
                new ObjectParameter("ProductName_EN", productName_EN) :
                new ObjectParameter("ProductName_EN", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            var originalPriceParameter = originalPrice != null ?
                new ObjectParameter("OriginalPrice", originalPrice) :
                new ObjectParameter("OriginalPrice", typeof(string));
    
            var sellingPriceParameter = sellingPrice != null ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var detailInfoParameter = detailInfo != null ?
                new ObjectParameter("DetailInfo", detailInfo) :
                new ObjectParameter("DetailInfo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMProduct", productIDParameter, productName_VIParameter, productName_ENParameter, productImageParameter, originalPriceParameter, sellingPriceParameter, quantityParameter, detailInfoParameter, statusParameter, rateParameter, categoryParameter, supplierParameter, unitParameter);
        }
    
        public virtual int usp_UpdateMSupplier(string supplierID, string supplierName, string address, string phoneNo_1, string phoneNo_2, Nullable<int> status, Nullable<int> rate)
        {
            var supplierIDParameter = supplierID != null ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNo_1Parameter = phoneNo_1 != null ?
                new ObjectParameter("PhoneNo_1", phoneNo_1) :
                new ObjectParameter("PhoneNo_1", typeof(string));
    
            var phoneNo_2Parameter = phoneNo_2 != null ?
                new ObjectParameter("PhoneNo_2", phoneNo_2) :
                new ObjectParameter("PhoneNo_2", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMSupplier", supplierIDParameter, supplierNameParameter, addressParameter, phoneNo_1Parameter, phoneNo_2Parameter, statusParameter, rateParameter);
        }
    
        public virtual int usp_UpdateTemp(string aa, string bb)
        {
            var aaParameter = aa != null ?
                new ObjectParameter("aa", aa) :
                new ObjectParameter("aa", typeof(string));
    
            var bbParameter = bb != null ?
                new ObjectParameter("bb", bb) :
                new ObjectParameter("bb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateTemp", aaParameter, bbParameter);
        }
    
        public virtual int usp_UpdateTUnit(string unitID, string unitName)
        {
            var unitIDParameter = unitID != null ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(string));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateTUnit", unitIDParameter, unitNameParameter);
        }
    }
}
