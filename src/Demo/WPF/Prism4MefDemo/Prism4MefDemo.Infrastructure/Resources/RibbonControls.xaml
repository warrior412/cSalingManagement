<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:Ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary">

		<!--=================================================================
		RibbonButton
		==================================================================-->

		<ControlTemplate x:Key="RibbonButtonTemplate" TargetType="{x:Type Ribbon:RibbonButton}">
			<Grid x:Name="MainGrid" SnapsToDevicePixels="True">

				<Border x:Name="OuterBorder"
					CornerRadius="{TemplateBinding CornerRadius}"
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}" 
					Margin="2,2,2,2"/>

				<Border x:Name="MiddleBorder"
					CornerRadius="{TemplateBinding CornerRadius}"
					Background="Transparent"
					BorderBrush="Transparent"
					BorderThickness="{TemplateBinding BorderThickness}" >
					<Border x:Name="InnerBorder"
						Background="Transparent"
						BorderBrush="Transparent"
						BorderThickness="{TemplateBinding BorderThickness}"
						Padding="{TemplateBinding Padding}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<StackPanel x:Name="StackPanel"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

							<Image x:Name="PART_Image"
							   Source="{TemplateBinding LargeImageSource}"
							   Width="32"
							   Height="32"
							   Margin="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Ribbon:Ribbon}, 
								ResourceId=LargeImageMargin}}"
							   RenderOptions.BitmapScalingMode="NearestNeighbor"
							   VerticalAlignment="Center"
							   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

							<Grid x:Name="GridText"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Center">

								<Ribbon:RibbonTwoLineText x:Name="TwoLineText"
										Text="{TemplateBinding Label}"
										TextAlignment="Center"
										VerticalAlignment="Top"
										HorizontalAlignment="Center"
										LineHeight="13px"
										LineStackingStrategy="BlockLineHeight"
										HasTwoLines="{TemplateBinding Ribbon:RibbonTwoLineText.HasTwoLines}"
										PathData="{TemplateBinding Ribbon:RibbonTwoLineText.PathData}"
										PathFill="{TemplateBinding Foreground}"
										Margin="1,1,1,0" />
							</Grid>
						</StackPanel>
					</Border>
				</Border>
			</Grid>

			<ControlTemplate.Triggers>

				<!-- Large Variant -->
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Large">
					<Setter Property="MinWidth" Value="44"/>
					<Setter Property="Height" Value="66"/>
					<Setter TargetName="GridText" Property="MinHeight" Value="26" />
					<Setter TargetName="TwoLineText" Property="HasTwoLines" Value="True" />
				</DataTrigger>

				<!-- Medium or Small Variant -->
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small">
					<Setter TargetName="StackPanel" Property="HorizontalAlignment" Value="Left" />

					<Setter TargetName="PART_Image" Property="Margin" Value="2,2,2,2" />
					<Setter TargetName="PART_Image" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}" />
					<Setter TargetName="PART_Image" Property="Width" Value="16" />
					<Setter TargetName="PART_Image" Property="Height" Value="16" />
					<Setter TargetName="PART_Image" Property="HorizontalAlignment" Value="Left" />

					<Setter TargetName="TwoLineText" Property="HorizontalAlignment" Value="Left" />
					<Setter TargetName="TwoLineText" Property="Margin" Value="1" />
					<Setter TargetName="StackPanel" Property="Orientation" Value="Horizontal" />
				</DataTrigger>

				<!-- IsMouseOver -->
				<Trigger Property="IsMouseOver" Value="True">
					<Setter TargetName="OuterBorder" Property="Background" 
							Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" />
					<Setter TargetName="OuterBorder" Property="BorderBrush" 
							Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" />
					<Setter TargetName="InnerBorder" Property="BorderBrush"
							Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" />
				</Trigger>

				<!-- IsFocused -->
				<Trigger Property="IsKeyboardFocused" Value="True">
					<Setter TargetName="OuterBorder" Property="Background" 
							Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" />
					<Setter TargetName="OuterBorder" Property="BorderBrush" 
							Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" />
					<Setter TargetName="InnerBorder" Property="BorderBrush" 
							Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}"/>
				</Trigger>

				<!-- IsPressed -->
				<Trigger Property="IsPressed" Value="True">
					<Setter TargetName="OuterBorder" Property="Background" 
							Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" />
					<Setter TargetName="OuterBorder" Property="BorderBrush" 
							Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}"  />
					<Setter TargetName="InnerBorder" Property="BorderBrush" Value="Transparent" />
				</Trigger>

				<!-- IsEnabled -->
				<Trigger Property="IsEnabled" Value="False">
					<Setter TargetName="PART_Image" Property="Opacity" Value="0.5" />
					<Setter TargetName="MainGrid" Property="TextElement.Foreground" Value="Gray"/>
					<Setter TargetName="TwoLineText" Property="PathFill" Value="Gray"/>
				</Trigger>

			</ControlTemplate.Triggers>
		</ControlTemplate>

		<Style x:Key="RibbonButtonStyle" TargetType="{x:Type Ribbon:RibbonButton}" >
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="CornerRadius" Value="2" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self},Path=Ribbon.MouseOverBorderBrush}" />
			<Setter Property="MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self},Path=Ribbon.MouseOverBackground}" />
			<Setter Property="PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self},Path=Ribbon.PressedBorderBrush}" />
			<Setter Property="PressedBackground" Value="{Binding RelativeSource={RelativeSource Self},Path=Ribbon.PressedBackground}" />
			<Setter Property="FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self},Path=Ribbon.FocusedBorderBrush}" />
			<Setter Property="FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self},Path=Ribbon.FocusedBackground}" />
			<Setter Property="Template" Value="{StaticResource RibbonButtonTemplate}" />
			<Setter Property="QuickAccessToolBarControlSizeDefinition">
				<Setter.Value>
					<Ribbon:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
				</Setter.Value>
			</Setter>
		</Style>

</ResourceDictionary>
